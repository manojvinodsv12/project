#!/usr/bin/env python
# coding: utf-8

# In[1]:


import pandas as pd
import numpy as np
data = pd.read_csv('adult.csv')
data


# In[3]:
#removing space in front of columns name

data.columns= data.columns.str.replace(' ','',regex=True)


# In[4]:

#replacing " ?" into nan
data.workclass[data.workclass==" ?"] =np.nan
data.occupation[data.occupation==" ?"] =np.nan
data['Native-country'][data['Native-country']==" ?"] =np.nan

# create  a new column  with country as US and Non US
data["Native-country"].value_counts()
data["country"]="Non-US"
data["country"][data["Native-country"]==" United-States"]="US"


# In[10]:
data["income"].value_counts() 
data['income_flag'] = data['income'].map({' <=50K':0, ' >50K':1})


#  Create a column from called marital combine the level - married divorced single etc
data['marital-status'].value_counts()
data["marital"]="married"
data["marital"][data["marital-status"]==" Never-married"]="single"



data['workclass'].value_counts()


# In[17]:

#create a columns make  all Federal-gov,Local-gov, State-gov into government and others can be private
data["workcl"]="private"
data["workcl"][data["workclass"]==" Local-gov"]="government"
data["workcl"][data["workclass"]==" State-gov"]="government"
data["workcl"][data["workclass"]==" Federal-gov"]="government"


#Create the columns by combining values in occupation and workclass
data['occupation'].value_counts()
data["occ"]="service"
data["occ"][data["occupation"]==" Protective-serv"]="non service"
data["occ"][data["occupation"]==" Priv-house-serv"]="non service"
data["occ"][data["occupation"]==" Handlers-cleaners"]="non service"
data["occ"][data["occupation"]==" Transport-moving"]="non service"
data["occ"][data["occupation"]==" Other-service"]="non service"
data["occ"][data["occupation"]==" Craft-repair"]="non service"
data["occ"][data["occupation"]==" Armed-Forces"]=" Armed-Forces"
data["occ"][data["occupation"]==" Machine-op-inspct"]="non service"


data['education'].value_counts()

data["educt"]="school Grade"
data["educt"][data["education"]==" Some-college"]="graduate"
data["educt"][data["education"]==" Masters"]="post graduate"
data["educt"][data["education"]==" Bachelors"]="graduate"
data["educt"][data["education"]==" Doctorate"]="post graduate"


# In[36]:


x = data[['sex','marital','occ','workcl','educt','race','country','Hours-per-week','Capital-loss','capital_gain']]
y = data['income_flag']


# In[37]:
#labelencoding and get dummies

from sklearn.preprocessing import LabelEncoder, OneHotEncoder
label = LabelEncoder()


# In[38]:


data['sex']=label.fit_transform(data['sex'])
data['occ']=label.fit_transform(data['occ'])
data['occ'] =pd.get_dummies(data['occ'])
data['workcl']=label.fit_transform(data['workcl'])
data['workcl'] =pd.get_dummies(data['workcl'])
data['educt']=label.fit_transform(data['educt'])
data['educt'] =pd.get_dummies(data['educt'])
data['marital']=label.fit_transform(data['marital'])
data['race']=label.fit_transform(data['race'])
data['race'] =pd.get_dummies(data['race'])
data['country']= label.fit_transform(data['country'])

#traning 

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.20,random_state=0)


# In[41]:


from sklearn.linear_model import LogisticRegression
s = LogisticRegression()
s.fit(x_train,y_train)
s.score(x_train,y_train)
s.score(x_test,y_test)


# In[44]:


from sklearn.ensemble import RandomForestClassifier
f = RandomForestClassifier(criterion='entropy')
f.fit(x_train,y_train)
f.score(x_train,y_train)
f.score(x_test,y_test)


# In[47]:


from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
x_train = sc.fit_transform(x_train)
x_test = sc.transform(x_test)


from sklearn.svm import SVC
d = SVC(kernel='linear')
d.fit(x_train,y_train)
d.score(x_train,y_train)
d.score(x_test,y_test)


# In[51]:


from sklearn.neighbors import KNeighborsClassifier
classifier = KNeighborsClassifier()
classifier.fit(x_train, y_train)
classifier.score(x_train,y_train)
classifier.score(x_test,y_test)






